# The following types define the data model of the example service
# based on which the GraphQL API is generated

# projectId: cjfvflw2k46tf01156qm8c9vb
# version: 1

enum Currency{
  ARS
}

type DeliveryDate @model{
  id: ID! @isUnique
  delivery: DateTime! 
  orderDeadline: DateTime! 
  food: Food! @relation(name: "FoodDeliveryDate")
}

type Food @model {
  id: ID! @isUnique
  title: String!
  price: Int
  priceCurrency: Currency @defaultValue(value: "ARS")
  cook: User! @relation(name: "FoodCook")
  dates: [DeliveryDate!]! @relation(name: "FoodDeliveryDate")
}

type User @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @isUnique
  fullName: String
  bio: String
  deliveryCenterLocation: Json
  deliveryCenterAddress: String
  deliveryRadiusInMeters: Int
  foods: [Food!]! @relation(name: "FoodCook")
}

type AuthCode @model {
  id: ID! @isUnique
  email: String! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String
  failedAttempts: Int @defaultValue(value: "0")
  alreadyUsed: Boolean @defaultValue(value: "false")
}

# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }
